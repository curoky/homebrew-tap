{% import 'template/utils.j2' as utils %}
{% call utils.autogen() %} {% endcall %}

class TmuxAT{{ ctx.class_version }} < Formula
  desc "Terminal multiplexer"
  homepage "https://tmux.github.io/"
  version "{{ ctx.version }}"
  url "https://github.com/tmux/tmux/releases/download/{{ ctx.tag }}/tmux-{{ ctx.tag }}.tar.gz"
  license "ISC"

  depends_on "pkg-config" => :build
  depends_on "libevent" => :build
  depends_on "ncurses" => :build
  depends_on "gcc" => :build

  def install
    ENV["CC"] = Formula["gcc"].opt_bin/"gcc-11"
    ENV["CXX"] = Formula["gcc"].opt_bin/"g++-11"
    ENV.append "CFLAGS", "-Os -DNDEBUG -s"
    ENV.append "CXXFLAGS", "-Os -DNDEBUG -s"
    ENV.append "CPPFLAGS", "-I/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include"
    # https://github.com/esnet/iperf/issues/632#issuecomment-334104098
    ENV.append "LDFLAGS", "--static" if OS.linux?
    ENV.append "LDFLAGS", "-static-libgcc -static-libstdc++" if OS.mac?
    ENV.append "LDFLAGS", "-lresolv"

    args = %W[
      --disable-dependency-tracking
      --prefix=#{prefix}
      --sysconfdir=#{etc}
    ]

    system "./configure", *args
    system "make", "install"
  end

  test do
    if OS.linux?
{% for bin in ctx.bins %}
      output = shell_output("ldd #{bin}/{{ bin }} 2>&1", 1).strip
{% endfor %}
      assert_equal "not a dynamic executable", output
    elsif OS.mac?
      # TODO(@curoky): use `otool -L` to check.
    end

    assert_equal "tmux {{ ctx.test_version }}", shell_output("#{bin}/tmux -V", 0).strip
  end

end
